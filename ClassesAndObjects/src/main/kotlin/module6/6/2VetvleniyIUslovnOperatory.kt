package module6.`6`

fun main() {  /*                    ВЕТВЛЕНИЯ И УСЛОВНЫЕ ОПЕРАТОРЫ

    Цель: познакомиться с ветвлениями

    Задачи:
    - рассмотреть условные операторы
    - научиться решать задачи выбора
    - научиться вводить данные в программу с клавиатуры
    - написать программу, которая выполняет разные действия, в зависимости от условий

                                        ВЕТВЛЕНИЕ
    Ветвление - это конструкция языка, обеспечивающая выполнение определенной команды (или блока кода) на основе значения
    некоторого логического выражения (условия).

    Условные операторы:
    if - else
    when

    if (condition) {
        // code block if condition == true
    }  else {
        // code block if condition == false
    }

    if (condition) {
        // code block if condition == true
        // else branch is omitted         -   в переводе (ветвь else опущена)
    }


    if (condition1) {
        // code block if condition1 == true
    } else if (condition2)  {
        // code block if condition2 == true
    } else if (condition3)  {
        // code block if condition3 == true
    } else {
        // code block if none of condition is true
    }

    В качестве простого примера напишем функцию, которая находит максимальное число из двух заданных:

    println(max(5,28))

    fun max(a: Int, b: Int): Int {   - функция выбирает наибольшее число из двух
        val maxNumber: Int
        if (a > b) {
            maxNumber = a
        } else {
            maxNumber = b
        }
        return maxNumber
    }

    fun max (a: Int, b: Int): Int = if (a > b) a else b      // та же функция но записана в одну строчку, так можно делать
    только с функциями которые содержат одно выражение(можно объявлять в одну строку)


    Частным случаем условного оператора является отсутствие ветки else если условия выполняются, то выполняем
    какие-то действия, если нет, то этот блок кода пропускается и программа идет дальше

    fun printIfPositive(n: Int) {
        if (n > 0)
            println(n) // если b > 0, то n отображается, если нет, то не отображается, а сразу отображаеться n 1000

        println(n + 1000)
    }

    В качестве более сложного примера напишем программу которая решает линейное уравнение с заданными коэффициентами.
    Линейное уравнение имеет вид ax + b = c, необходимо найти x. Коэффициенты a, b, c - это целые числа которые вводятся
    в программу с клавиатуры


       */




}

